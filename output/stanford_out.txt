(ROOT
  (S
    (NP
      (NP (DT the) (NN horse))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (NN kim))
          (ADVP (RB sometimes))
          (VP (VBZ rides)))))
    (VP (VBZ is)
      (ADVP (RBR more) (RB bad))
      (VP (VBN tempered)
        (PP (IN than)
          (NP (NN mine)))))
    (. .)))

det(horse-2, the-1)
obj(rides-6, horse-2)
nsubj:pass(tempered-10, horse-2)
ref(horse-2, which-3)
nsubj(rides-6, kim-4)
advmod(rides-6, sometimes-5)
acl:relcl(horse-2, rides-6)
aux:pass(tempered-10, is-7)
advmod(bad-9, more-8)
advmod(tempered-10, bad-9)
root(ROOT-0, tempered-10)
case(mine-12, than-11)
obl:than(tempered-10, mine-12)

(ROOT
  (S
    (NP
      (NP (DT the) (NN horse))
      (CONJP (RB as) (RB well) (IN as))
      (NP
        (NP (DT the) (NNS rabbits))
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP we))
            (VP (VBD wanted)
              (S
                (VP (TO to)
                  (VP (VB eat)))))))))
    (VP (VBP have)
      (VP (VBN escaped)))
    (. .)))

det(horse-2, the-1)
nsubj(escaped-14, horse-2)
cc(rabbits-7, as-3)
fixed(as-3, well-4)
fixed(as-3, as-5)
det(rabbits-7, the-6)
conj:and(horse-2, rabbits-7)
obj(wanted-10, rabbits-7)
nsubj:xsubj(eat-12, rabbits-7)
nsubj(escaped-14, rabbits-7)
ref(rabbits-7, which-8)
nsubj(wanted-10, we-9)
acl:relcl(rabbits-7, wanted-10)
mark(eat-12, to-11)
xcomp(wanted-10, eat-12)
aux(escaped-14, have-13)
root(ROOT-0, escaped-14)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD was)
      (NP (PRP$ my) (NN aunt) (NN ’s) (NN car))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP we))
          (VP (VBD sold)
            (PP (IN at)
              (NP (NN auction)))
            (NP (JJ last) (NN year))
            (PP (IN in)
              (NP (NNP february)))))))
    (. .)))

nsubj(car-6, it-1)
cop(car-6, was-2)
nmod:poss(car-6, my-3)
compound(car-6, aunt-4)
compound(car-6, ’s-5)
root(ROOT-0, car-6)
obj(sold-9, which-7)
nsubj(sold-9, we-8)
dep(car-6, sold-9)
case(auction-11, at-10)
obl:at(sold-9, auction-11)
amod(year-13, last-12)
obl:tmod(sold-9, year-13)
case(february-15, in-14)
obl:in(sold-9, february-15)

(ROOT
  (S
    (NP
      (NP (DT the) (NNS veterans))
      (SBAR
        (WHNP (WP who))
        (S
          (NP (PRP i))
          (VP (VBD thought)
            (SBAR (IN that)
              (S
                (NP (PRP we))
                (VP (MD would)
                  (VP (VB meet)
                    (PP (IN at)
                      (NP (DT the) (NN reunion)))))))))))
    (VP (VBD were)
      (ADJP (JJ dead)))
    (. .) ('' ")))

det(veterans-2, the-1)
obj(thought-5, veterans-2)
nsubj(dead-14, veterans-2)
ref(veterans-2, who-3)
nsubj(thought-5, i-4)
acl:relcl(veterans-2, thought-5)
mark(meet-9, that-6)
nsubj(meet-9, we-7)
aux(meet-9, would-8)
ccomp(thought-5, meet-9)
case(reunion-12, at-10)
det(reunion-12, the-11)
obl:at(meet-9, reunion-12)
cop(dead-14, were-13)
root(ROOT-0, dead-14)

(ROOT
  (S
    (NP
      (NP (JJ natural) (NNS disasters))
      (: –)
      (NP
        (NP (NNS storms))
        (, ,)
        (NP (NN flooding))
        (, ,)
        (NP (NNS hurricanes)))
      (: –))
    (VP
      (VP (VBP occur)
        (ADVP (RB infrequently)))
      (CC but)
      (VP (VBP cause)
        (NP
          (NP (NN devastation))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ strains)
                (NP (NNS resources))
                (PP (IN to)
                  (S
                    (VP (VBG breaking)
                      (NP (NN point)))))))))))
    (. .) ('' ") ('' ")))

amod(disasters-2, natural-1)
nsubj(occur-10, disasters-2)
nsubj(cause-13, disasters-2)
dep(disasters-2, storms-4)
appos(storms-4, flooding-6)
appos(storms-4, hurricanes-8)
root(ROOT-0, occur-10)
advmod(occur-10, infrequently-11)
cc(cause-13, but-12)
conj:but(occur-10, cause-13)
obj(cause-13, devastation-14)
nsubj(strains-16, devastation-14)
ref(devastation-14, that-15)
acl:relcl(devastation-14, strains-16)
obj(strains-16, resources-17)
mark(breaking-19, to-18)
advcl(strains-16, breaking-19)
obj(breaking-19, point-20)

(ROOT
  (S
    (S
      (VP (VBG making)
        (SBAR
          (S
            (NP (DT these) (NNS decisions))
            (VP (VBZ requires)
              (NP
                (NP (JJ sophisticated) (NN knowledge))
                (PP (IN of)
                  (NP (NN syntax)))))))))
    (: ;)
    (S
      (VP (VBG tagging)
        (S
          (NP (NN manuals) (-LRB- -LRB-) (CD santorini) (, ,) (CD 1990) (-RRB- -RRB-))
          (VP (VB give)
            (NP (JJ various) (NNS heuristics))
            (NP
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD can)
                    (VP (VB help)
                      (S
                        (NP (JJ human) (NNS coders))
                        (VP (VB make)
                          (NP (DT these) (NNS decisions))))))))
              (CC and)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD can)
                    (ADVP (RB also))
                    (VP (VB provide)
                      (NP (JJ useful) (NNS features))
                      (PP (IN for)
                        (NP (JJ automatic) (NNS taggers))))))))))))
    (. .) ('' ") ('' ")))

root(ROOT-0, making-1)
det(decisions-3, these-2)
nsubj(requires-4, decisions-3)
ccomp(making-1, requires-4)
amod(knowledge-6, sophisticated-5)
obj(requires-4, knowledge-6)
case(syntax-8, of-7)
nmod:of(knowledge-6, syntax-8)
parataxis(making-1, tagging-10)
nsubj(give-17, manuals-11)
nummod(manuals-11, santorini-13)
nummod(manuals-11, 1990-15)
ccomp(tagging-10, give-17)
amod(heuristics-19, various-18)
iobj(give-17, heuristics-19)
nsubj(help-22, that-20)
aux(help-22, can-21)
obj(give-17, help-22)
amod(coders-24, human-23)
nsubj(make-25, coders-24)
ccomp(help-22, make-25)
det(decisions-27, these-26)
obj(make-25, decisions-27)
cc(provide-32, and-28)
nsubj(provide-32, that-29)
aux(provide-32, can-30)
advmod(provide-32, also-31)
obj(give-17, provide-32)
conj:and(help-22, provide-32)
amod(features-34, useful-33)
obj(provide-32, features-34)
case(taggers-37, for-35)
amod(taggers-37, automatic-36)
obl:for(provide-32, taggers-37)

(ROOT
  (S
    (NP (DT the) (JJ penn) (NN treebank) (NN tagset))
    (VP (VBD was)
      (VP (VBN culled)
        (PP (IN from)
          (NP
            (NP (DT the) (JJ original)
              (NML (CD 87) (HYPH -) (NN tag))
              (NN tagset))
            (PP (IN for)
              (NP (DT the) (JJ brown) (NN corpus)))))))
    (. .)))

det(tagset-4, the-1)
amod(tagset-4, penn-2)
compound(tagset-4, treebank-3)
nsubj:pass(culled-6, tagset-4)
aux:pass(culled-6, was-5)
root(ROOT-0, culled-6)
case(tagset-13, from-7)
det(tagset-13, the-8)
amod(tagset-13, original-9)
nummod(tag-12, 87-10)
punct(tag-12, --11)
compound(tagset-13, tag-12)
obl:from(culled-6, tagset-13)
case(corpus-17, for-14)
det(corpus-17, the-15)
amod(corpus-17, brown-16)
nmod:for(tagset-13, corpus-17)

(ROOT
  (S
    (SBAR (IN for)
      (S
        (NP
          (NP (NN example))
          (SBAR
            (S
              (NP (DT the) (JJ original)
                (ADJP (JJ brown)
                  (CC and)
                  (JJ c5))
                (NNS tagsets))
              (VP (VBP include)
                (NP (DT a) (JJ separate) (NN tag))
                (PP (IN for)
                  (NP
                    (NP (DT each))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (JJ different) (NNS forms))
                        (PP (IN of)
                          (NP (DT the) (NNS verbs)))))))))))
        (VP (VBP do)
          (NP
            (NP (-LRB- -LRB-)
              (ADVP (FW e.g.))
              (CD c5) (NN tag) (NNS vdd))
            (SBAR (IN for)
              (S
                (VP
                  (VP (VBD did))
                  (CC and)
                  (VP (VBP vdg)
                    (NP (NN tag))
                    (PP (IN for)
                      (S
                        (VP (VBG doing))))
                    (-RRB- -RRB-)))))))))
    (, ,)
    (VP
      (VP (VB be))
      (CC and)
      (VP (VB have)))
    (. .) ('' ") ('' ")))

mark(do-22, for-1)
nsubj(do-22, example-2)
det(tagsets-8, the-3)
amod(tagsets-8, original-4)
amod(tagsets-8, brown-5)
cc(c5-7, and-6)
conj:and(brown-5, c5-7)
amod(tagsets-8, c5-7)
nsubj(include-9, tagsets-8)
acl:relcl(example-2, include-9)
det(tag-12, a-10)
amod(tag-12, separate-11)
obj(include-9, tag-12)
case(each-14, for-13)
obl:for(include-9, each-14)
case(forms-18, of-15)
det(forms-18, the-16)
amod(forms-18, different-17)
nmod:of(each-14, forms-18)
case(verbs-21, of-19)
det(verbs-21, the-20)
nmod:of(forms-18, verbs-21)
advcl(be-37, do-22)
advmod(vdd-27, e.g.-24)
nummod(vdd-27, c5-25)
compound(vdd-27, tag-26)
obj(do-22, vdd-27)
mark(did-29, for-28)
dep(vdd-27, did-29)
cc(vdg-31, and-30)
dep(vdd-27, vdg-31)
conj:and(did-29, vdg-31)
obj(vdg-31, tag-32)
mark(doing-34, for-33)
advcl(vdg-31, doing-34)
root(ROOT-0, be-37)
cc(have-39, and-38)
conj:and(be-37, have-39)

(ROOT
  (S
    (NP
      (NP (DT the) (RB slightly) (VBN simplified) (NN version))
      (PP (IN of)
        (NP
          (NP (DT the) (NN viterbi) (NN algorithm))
          (SBAR (IN that)
            (S
              (NP (PRP we))
              (VP (VBP present)))))))
    (VP
      (VP (VBZ takes)
        (PP (IN as)
          (NP
            (NP
              (NP (NN input))
              (NP (DT a) (JJ single) (NN hmm)))
            (CC and)
            (NP
              (NP (DT a) (NN sequence))
              (PP (IN of)
                (NP
                  (NP (VBN observed) (NNS words))
                  (PP (IN o)
                    (NP (SYM =))))))))
        (PRN (-LRB- -LRB-)
          (NP (CD o1))
          (, ,)
          (NP (CD o2) (, ,))
          (, ...)
          (NP (CD ot))
          (-RRB- -RRB-)))
      (CC and)
      (VP (VBZ returns)
        (NP
          (NP (DT the)
            (ADJP (RBS most) (JJ probable))
            (NN state))
          (, /)
          (NP
            (NML (NN tag) (NN sequence))
            (NN q) (SYM =)
            (PRN (-LRB- -LRB-)
              (NP (CD q1) (, ,) (CD q2) (, ,) (CD qt))
              (-RRB- -RRB-))))
        (ADVP (RB together))
        (PP (IN with)
          (NP (PRP$ its) (NN probability)))))
    (. .) ('' ") ('' ")))

det(version-4, the-1)
advmod(version-4, slightly-2)
amod(version-4, simplified-3)
nsubj(takes-12, version-4)
nsubj(returns-35, version-4)
case(algorithm-8, of-5)
det(algorithm-8, the-6)
compound(algorithm-8, viterbi-7)
nmod:of(version-4, algorithm-8)
mark(present-11, that-9)
nsubj(present-11, we-10)
dep(algorithm-8, present-11)
root(ROOT-0, takes-12)
case(input-14, as-13)
obl:as(takes-12, input-14)
det(hmm-17, a-15)
amod(hmm-17, single-16)
dep(input-14, hmm-17)
cc(sequence-20, and-18)
det(sequence-20, a-19)
obl:as(takes-12, sequence-20)
conj:and(input-14, sequence-20)
case(words-23, of-21)
amod(words-23, observed-22)
nmod:of(sequence-20, words-23)
case(=-25, o-24)
nmod:o(words-23, =-25)
dep(takes-12, o1-27)
dep(o1-27, o2-29)
dep(o1-27, ot-32)
cc(returns-35, and-34)
conj:and(takes-12, returns-35)
det(state-39, the-36)
advmod(probable-38, most-37)
amod(state-39, probable-38)
obj(returns-35, state-39)
compound(sequence-42, tag-41)
compound(q-43, sequence-42)
appos(state-39, q-43)
dep(q-43, =-44)
nummod(qt-50, q1-46)
nummod(qt-50, q2-48)
appos(q-43, qt-50)
advmod(returns-35, together-52)
case(probability-55, with-53)
nmod:poss(probability-55, its-54)
obl:with(returns-35, probability-55)

(ROOT
  (S
    (S
      (VP (VBG coming)
        (ADVP (RB home))
        (PP (IN from)
          (NP
            (ADJP (RB very) (JJ lonely))
            (NNS places)))))
    (, ,)
    (S
      (NP
        (NP (DT all))
        (PP (IN of)
          (NP (PRP us))))
      (VP (VBP go)
        (ADJP
          (NP (DT a) (JJ little))
          (JJ mad))
        (: :)
        (SBAR (IN whether)
          (S
            (PP (IN from)
              (NP
                (NP (JJ great) (JJ personal) (NN success))
                (, ,)
                (CONJP (CC or)
                  (RB just))
                (NP (DT an)
                  (NML (DT all) (HYPH -) (NN night))
                  (NN drive))))
            (, ,)
            (NP (PRP we))
            (VP (VBP are)
              (NP
                (NP (DT the) (JJ sole) (NNS survivors))
                (PP (IN of)
                  (NP (DT a) (NN world)))))))))
    (S
      (NP (DT no) (NN one) (RB else))
      (VP (VBZ has)
        (ADVP (RB ever))
        (VP (VBN seen))))
    (. .) ('' ") ('' ")))

root(ROOT-0, coming-1)
advmod(coming-1, home-2)
case(places-6, from-3)
advmod(lonely-5, very-4)
amod(places-6, lonely-5)
obl:from(coming-1, places-6)
nsubj(go-11, all-8)
case(us-10, of-9)
nmod:of(all-8, us-10)
parataxis(coming-1, go-11)
det(little-13, a-12)
obl:npmod(mad-14, little-13)
xcomp(go-11, mad-14)
mark(survivors-34, whether-16)
case(success-20, from-17)
amod(success-20, great-18)
amod(success-20, personal-19)
obl:from(survivors-34, success-20)
cc(just-23, or-22)
cc(drive-28, just-23)
det(drive-28, an-24)
det(night-27, all-25)
punct(night-27, --26)
compound(drive-28, night-27)
conj:just(success-20, drive-28)
obl:from(survivors-34, drive-28)
nsubj(survivors-34, we-30)
cop(survivors-34, are-31)
det(survivors-34, the-32)
amod(survivors-34, sole-33)
ccomp(go-11, survivors-34)
case(world-37, of-35)
det(world-37, a-36)
nmod:of(survivors-34, world-37)
det(one-39, no-38)
nsubj(seen-43, one-39)
advmod(one-39, else-40)
aux(seen-43, has-41)
advmod(seen-43, ever-42)
parataxis(coming-1, seen-43)

(ROOT
  (S (CC but)
    (S
      (NP
        (ADJP (RB far) (JJR fewer))
        (NNS people))
      (ADVP (RB fully))
      (VP (VBP understand)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (DT the) (NN media) (NN lab))
            (VP
              (VP (VBZ operates))
              (, ,)
              (VP (VBZ fits)
                (PP (IN into)
                  (NP (NN mit))))
              (, ,)
              (CC and)
              (VP (VBZ encourages)
                (NP (PDT such) (DT a) (JJ creative) (NN environment))))))))
    (: ;)
    (S
      (NP
        (NP
          (QP (RB about) (PDT half)))
        (PP (IN of)
          (NP (DT the) (NN anniversary) (NN celebration) (NN ’s) (NN program))))
      (VP (VBD focused)
        (PP (IN on)
          (S
            (ADVP (RB simply))
            (VP (VBG defining)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT the) (NN media) (NN lab))
                  (VP (VBZ is)))))))))
    (. .) ('' ")))

cc(understand-6, but-1)
advmod(fewer-3, far-2)
amod(people-4, fewer-3)
nsubj(understand-6, people-4)
advmod(understand-6, fully-5)
root(ROOT-0, understand-6)
advmod(operates-11, how-7)
det(lab-10, the-8)
compound(lab-10, media-9)
nsubj(operates-11, lab-10)
nsubj(fits-13, lab-10)
nsubj(encourages-18, lab-10)
ccomp(understand-6, operates-11)
ccomp(understand-6, fits-13)
conj:and(operates-11, fits-13)
case(mit-15, into-14)
obl:into(fits-13, mit-15)
cc(encourages-18, and-17)
ccomp(understand-6, encourages-18)
conj:and(operates-11, encourages-18)
det:predet(environment-22, such-19)
det(environment-22, a-20)
amod(environment-22, creative-21)
obj(encourages-18, environment-22)
advmod(half-25, about-24)
nsubj(focused-32, half-25)
case(program-31, of-26)
det(program-31, the-27)
compound(program-31, anniversary-28)
compound(program-31, celebration-29)
compound(program-31, ’s-30)
nmod:of(half-25, program-31)
parataxis(understand-6, focused-32)
mark(defining-35, on-33)
advmod(defining-35, simply-34)
advcl(focused-32, defining-35)
obj(is-40, what-36)
det(lab-39, the-37)
compound(lab-39, media-38)
nsubj(is-40, lab-39)
ccomp(defining-35, is-40)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ consists)
      (PP (IN of)
        (NP
          (NP
            (NP (DT a) (NN series))
            (PP (IN of)
              (NP (NNS pipes))))
          (CC and)
          (NP
            (NP (DT a)
              (ADJP (NN pressure) (HYPH -) (VBG measuring))
              (NN chamber))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VB record)
                  (NP
                    (NP (DT the) (NN rise)
                      (CC and)
                      (NN fall))
                    (PP (IN of)
                      (NP (DT the) (NN water) (NN surface)))))))))))
    (. .) ('' ")))

nsubj(consists-2, it-1)
root(ROOT-0, consists-2)
case(series-5, of-3)
det(series-5, a-4)
obl:of(consists-2, series-5)
case(pipes-7, of-6)
nmod:of(series-5, pipes-7)
cc(chamber-13, and-8)
det(chamber-13, a-9)
obl(measuring-12, pressure-10)
punct(measuring-12, --11)
amod(chamber-13, measuring-12)
obl:of(consists-2, chamber-13)
conj:and(series-5, chamber-13)
nsubj(record-15, chamber-13)
ref(chamber-13, which-14)
acl:relcl(chamber-13, record-15)
det(rise-17, the-16)
obj(record-15, rise-17)
cc(fall-19, and-18)
obj(record-15, fall-19)
conj:and(rise-17, fall-19)
case(surface-23, of-20)
det(surface-23, the-21)
compound(surface-23, water-22)
nmod:of(rise-17, surface-23)

(ROOT
  (S
    (S
      (S
        (NP (PRP he))
        (VP (VBD tried)
          (S
            (VP (TO to)
              (VP (VB ignore)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP$ his) (JJ own) (JJ common) (NN sense))
                    (VP (VBD told)
                      (NP (PRP him))))))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (ADJP (RB n’t) (JJ possible)))))
    (: ;)
    (S
      (NP (PRP$ her) (NNS motives))
      (VP (VBD were)
        (ADJP (RB too) (JJ blatant))))
    (. .) ('' ")))

nsubj(tried-2, he-1)
nsubj:xsubj(ignore-4, he-1)
root(ROOT-0, tried-2)
mark(ignore-4, to-3)
xcomp(tried-2, ignore-4)
obj(told-10, what-5)
nmod:poss(sense-9, his-6)
amod(sense-9, own-7)
amod(sense-9, common-8)
nsubj(told-10, sense-9)
ccomp(ignore-4, told-10)
obj(told-10, him-11)
cc(possible-17, but-13)
nsubj(possible-17, it-14)
cop(possible-17, was-15)
advmod(possible-17, n’t-16)
conj:but(tried-2, possible-17)
nmod:poss(motives-20, her-19)
nsubj(blatant-23, motives-20)
cop(blatant-23, were-21)
advmod(blatant-23, too-22)
parataxis(tried-2, blatant-23)

(ROOT
  (SBARQ
    (WHNP (WDT what) (NN city))
    (SQ (VBZ does)
      (NP (DT the) (NN tour) (NNP de) (NNP france))
      (VP (VB end)
        (PRT (RP in))))
    (. ?) ('' ")))

det(city-2, what-1)
obj(end-8, city-2)
aux(end-8, does-3)
det(france-7, the-4)
compound(france-7, tour-5)
compound(france-7, de-6)
nsubj(end-8, france-7)
root(ROOT-0, end-8)
compound:prt(end-8, in-9)

(ROOT
  (S
    (PP (IN for)
      (NP
        (NP (DT the) (JJ third) (NN year))
        (PP (IN in)
          (NP (DT a) (NN row)))))
    (, ,)
    (NP (NNS consumers))
    (VP
      (VP (VBD voted)
        (NP (NN bill) (NN cosby))
        (ADVP (RB first)))
      (CC and)
      (VP (VBZ james)
        (VP (VB garner)
          (NP
            (NP (JJ second))
            (PP (IN in)
              (NP (NN persuasiveness))))
          (PP (IN as)
            (NP
              (NP (NNS spokesmen))
              (PP (IN in)
                (NP (NN tv) (NNS commercials)))))
          (, ,)
          (PP (VBG according)
            (PP (IN to)
              (NP
                (NP (JJ video) (JJ storyboard) (NNS tests))
                (, ,)
                (NP (JJ new) (NNS york))))))))
    (. .) ('' ") ('' ")))

case(year-4, for-1)
det(year-4, the-2)
amod(year-4, third-3)
obl:for(voted-10, year-4)
case(row-7, in-5)
det(row-7, a-6)
nmod:in(year-4, row-7)
nsubj(voted-10, consumers-9)
nsubj(james-15, consumers-9)
root(ROOT-0, voted-10)
compound(cosby-12, bill-11)
obj(voted-10, cosby-12)
advmod(voted-10, first-13)
cc(james-15, and-14)
conj:and(voted-10, james-15)
xcomp(james-15, garner-16)
obj(garner-16, second-17)
case(persuasiveness-19, in-18)
nmod:in(second-17, persuasiveness-19)
case(spokesmen-21, as-20)
obl:as(garner-16, spokesmen-21)
case(commercials-24, in-22)
compound(commercials-24, tv-23)
nmod:in(spokesmen-21, commercials-24)
case(tests-30, according-26)
fixed(according-26, to-27)
amod(tests-30, video-28)
amod(tests-30, storyboard-29)
obl:according_to(garner-16, tests-30)
amod(york-33, new-32)
appos(tests-30, york-33)

(ROOT
  (S
    (PP (IN in)
      (S
        (VP (VBG assigning)
          (PP (IN to)
            (INTJ (UH god))
            (NP
              (NP (DT the) (NN responsibility))
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (PRP he))
                  (VP (VBD learned)
                    (SBAR
                      (S
                        (VP (MD could) (RB not)
                          (VP (VB rest)
                            (PP (IN with)
                              (NP (PRP$ his) (NNS doctors)))))))))))))))
    (, ,)
    (NP (NN eisenhower))
    (VP (VBD gave)
      (NP
        (NP (NN evidence))
        (PP (IN of)
          (NP
            (NP (DT that) (NN weakening))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ moral) (NN intuition))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD was)
                      (S
                        (VP (TO to)
                          (VP (VB characterize)
                            (NP (PRP$ his) (NN administration))
                            (PP (IN in)
                              (NP (DT the) (NNS years)))
                            (S
                              (VP (TO to)
                                (VP (VB follow))))))))))))))))
    (. .) ('' ") ('' ")))

mark(assigning-2, in-1)
advcl(gave-18, assigning-2)
case(responsibility-6, to-3)
discourse(responsibility-6, god-4)
det(responsibility-6, the-5)
obl:to(assigning-2, responsibility-6)
obj(learned-9, responsibility-6)
ref(responsibility-6, which-7)
nsubj(learned-9, he-8)
acl:relcl(responsibility-6, learned-9)
aux(rest-12, could-10)
advmod(rest-12, not-11)
ccomp(learned-9, rest-12)
case(doctors-15, with-13)
nmod:poss(doctors-15, his-14)
obl:with(rest-12, doctors-15)
nsubj(gave-18, eisenhower-17)
root(ROOT-0, gave-18)
obj(gave-18, evidence-19)
case(weakening-22, of-20)
det(weakening-22, that-21)
nmod:of(evidence-19, weakening-22)
case(intuition-26, of-23)
det(intuition-26, the-24)
amod(intuition-26, moral-25)
nmod:of(weakening-22, intuition-26)
nsubj(was-28, intuition-26)
nsubj:xsubj(characterize-30, intuition-26)
ref(intuition-26, which-27)
acl:relcl(intuition-26, was-28)
mark(characterize-30, to-29)
xcomp(was-28, characterize-30)
nmod:poss(administration-32, his-31)
obj(characterize-30, administration-32)
case(years-35, in-33)
det(years-35, the-34)
obl:in(characterize-30, years-35)
mark(follow-37, to-36)
advcl(characterize-30, follow-37)

(ROOT
  (S
    (PP (IN by)
      (NP (NNP monday)))
    (, ,)
    (NP (PRP they))
    (VP (VBP hope)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP
              (NP (DT a) (NN sheaf))
              (PP (IN of)
                (NP
                  (NP (NNS documents))
                  (SBAR
                    (S
                      (NP (DT both) (NNS sides))
                      (VP (MD can)
                        (VP (VB trust))))))))))))
    (. .) ('' ")))

case(monday-2, by-1)
obl:by(hope-5, monday-2)
nsubj(hope-5, they-4)
nsubj:xsubj(have-7, they-4)
root(ROOT-0, hope-5)
mark(have-7, to-6)
xcomp(hope-5, have-7)
det(sheaf-9, a-8)
obj(have-7, sheaf-9)
case(documents-11, of-10)
nmod:of(sheaf-9, documents-11)
det(sides-13, both-12)
nsubj(trust-15, sides-13)
aux(trust-15, can-14)
acl:relcl(documents-11, trust-15)

(ROOT
  (SBARQ
    (WHNP (WP what))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB submit)
        (PP (IN to)
          (NP (PRP$ your) (NN thesis) (NN advisor)))))
    (. ?)))

obj(submit-4, what-1)
aux(submit-4, did-2)
nsubj(submit-4, you-3)
root(ROOT-0, submit-4)
case(advisor-8, to-5)
nmod:poss(advisor-8, your-6)
compound(advisor-8, thesis-7)
obl:to(submit-4, advisor-8)

(ROOT
  (SBARQ
    (WHNP (WP what))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB call)
        (S
          (VP (TO to)
            (VP (VB tell)
              (NP (PRP me)))))))
    (. ?)))

obj(tell-6, what-1)
aux(call-4, did-2)
nsubj(call-4, you-3)
nsubj:xsubj(tell-6, you-3)
root(ROOT-0, call-4)
mark(tell-6, to-5)
xcomp(call-4, tell-6)
obj(tell-6, me-7)

(ROOT
  (SBARQ
    (WHADVP (WRB where))
    (SQ (MD should)
      (NP (PRP i))
      (VP (VB park)
        (S
          (VP (TO to)
            (VP (VB avoid)
              (S
                (VP (VBG getting)
                  (NP (DT a) (NN parking) (NN ticket)))))))))
    (. ?)))

advmod(park-4, where-1)
aux(park-4, should-2)
nsubj(park-4, i-3)
nsubj:xsubj(avoid-6, i-3)
root(ROOT-0, park-4)
mark(avoid-6, to-5)
xcomp(park-4, avoid-6)
xcomp(avoid-6, getting-7)
det(ticket-10, a-8)
compound(ticket-10, parking-9)
obj(getting-7, ticket-10)

(ROOT
  (SBARQ
    (WHNP (WP what))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB eat)
        (PP (IN during)
          (NP
            (NP (PRP$ your) (NN vacation))
            (PP (IN in)
              (NP (NN rome)))))))
    (. ?)))

obj(eat-4, what-1)
aux(eat-4, did-2)
nsubj(eat-4, you-3)
root(ROOT-0, eat-4)
case(vacation-7, during-5)
nmod:poss(vacation-7, your-6)
obl:during(eat-4, vacation-7)
case(rome-9, in-8)
nmod:in(vacation-7, rome-9)

(ROOT
  (S
    (NP (NN nobody))
    (VP (VBZ knows)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBD happened)
            (SBAR (IN because)
              (S
                (NP (DT no) (NN one) (RB else))
                (VP (VBD was)
                  (PP (IN in)
                    (NP (DT the) (NN room)))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP it))
                      (VP (VBD happened)))))))))))
    (. .)))

nsubj(knows-2, nobody-1)
root(ROOT-0, knows-2)
nsubj(happened-4, what-3)
ccomp(knows-2, happened-4)
mark(room-12, because-5)
det(one-7, no-6)
nsubj(room-12, one-7)
advmod(one-7, else-8)
cop(room-12, was-9)
case(room-12, in-10)
det(room-12, the-11)
advcl(happened-4, room-12)
advmod(happened-15, when-13)
nsubj(happened-15, it-14)
advcl(room-12, happened-15)

(ROOT
  (S
    (NP (PRP she))
    (VP (MD could) (RB n't)
      (VP (VB ignore)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP$ her) (NN heart))
            (VP (VBD was)
              (VP (VBG telling)
                (NP (PRP her))))))))
    (. .) ('' ")))

nsubj(ignore-4, she-1)
aux(ignore-4, could-2)
advmod(ignore-4, n't-3)
root(ROOT-0, ignore-4)
obj(telling-9, what-5)
nmod:poss(heart-7, her-6)
nsubj(telling-9, heart-7)
aux(telling-9, was-8)
ccomp(ignore-4, telling-9)
obj(telling-9, her-10)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBD told)
      (NP (PRP her))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD needed)
            (S
              (VP (TO to)
                (VP (VB find)
                  (NP (PRP himself)))))
            (, ,)
            (SBAR
              (WHNP (WDT whatever))
              (S
                (NP (DT that))
                (VP (VBZ means))))))))
    (. .) ('' ") ('' ")))

nsubj(told-2, he-1)
root(ROOT-0, told-2)
obj(told-2, her-3)
nsubj(needed-5, he-4)
nsubj:xsubj(find-7, he-4)
ccomp(told-2, needed-5)
mark(find-7, to-6)
xcomp(needed-5, find-7)
obj(find-7, himself-8)
obj(means-12, whatever-10)
nsubj(means-12, that-11)
ccomp(needed-5, means-12)

(ROOT
  (S
    (NP
      (NP (NN honolulu))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBZ is)
            (NP
              (NP (DT the) (NN center))
              (PP (IN of)
                (NP (DT the) (NN warning) (NN system)))))))
      (, ,))
    (VP (VBD was)
      (PP (IN under)
        (NP
          (NP (NN threat))
          (PP (IN of)
            (NP (NN attack)))))
      (`` ")
      (S
        (S
          (NP
            (NP (DT the) (NN stranger))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD had)
                  (VP (VBN held)
                    (PRT (RP out))
                    (NP (PRP$ his) (NN cigarette))
                    (ADVP
                      (ADVP (RBR lighter))
                      (PP (IN to)
                        (NP (PRP me)))))))))
          (VP (VBD retreated)
            (PRT (RP back))
            (PP (IN into)
              (NP (DT the) (NNS shadows)))))
        (S
          (NP (DT each))
          (VP (MD must)
            (VP (VB match)
              (NP
                (NP (JJ wisman) (NN ’s) (`` “) (NN pie) ('' ”))
                (PP (IN with)
                  (NP (DT the) (NN fragment)))))))
        (S
          (NP (PRP he))
          (VP (VBZ carries)
            (PP (IN with)
              (NP (PRP him)))))))
    (. .) ('' ")))

nsubj(center-6, honolulu-1)
nsubj(threat-14, honolulu-1)
ref(honolulu-1, which-3)
cop(center-6, is-4)
det(center-6, the-5)
acl:relcl(honolulu-1, center-6)
case(system-10, of-7)
det(system-10, the-8)
compound(system-10, warning-9)
nmod:of(center-6, system-10)
cop(threat-14, was-12)
case(threat-14, under-13)
root(ROOT-0, threat-14)
case(attack-16, of-15)
nmod:of(threat-14, attack-16)
det(stranger-19, the-18)
nsubj(held-22, stranger-19)
nsubj(retreated-29, stranger-19)
ref(stranger-19, who-20)
aux(held-22, had-21)
acl:relcl(stranger-19, held-22)
compound:prt(held-22, out-23)
nmod:poss(cigarette-25, his-24)
obj(held-22, cigarette-25)
advmod(held-22, lighter-26)
case(me-28, to-27)
obl:to(lighter-26, me-28)
xcomp(threat-14, retreated-29)
compound:prt(retreated-29, back-30)
case(shadows-33, into-31)
det(shadows-33, the-32)
obl:into(retreated-29, shadows-33)
nsubj(match-36, each-34)
aux(match-36, must-35)
parataxis(retreated-29, match-36)
amod(pie-40, wisman-37)
compound(pie-40, ’s-38)
obj(match-36, pie-40)
case(fragment-44, with-42)
det(fragment-44, the-43)
nmod:with(pie-40, fragment-44)
nsubj(carries-46, he-45)
parataxis(retreated-29, carries-46)
case(him-48, with-47)
obl:with(carries-46, him-48)

(ROOT
  (S
    (NP
      (NP (DT the) (RB slightly) (VBN simplified) (NN version))
      (PP (IN of)
        (NP
          (NP (DT the) (NN viterbi) (NN algorithm))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP present)))))))
    (VP
      (VP (VBZ takes)
        (PP (IN as)
          (NP
            (NP
              (NP (NN input))
              (NP (DT a) (JJ single) (NN hmm)))
            (CC and)
            (NP
              (NP (DT a) (NN sequence))
              (PP (IN of)
                (NP
                  (NP (VBN observed) (NNS words))
                  (PP (IN o)
                    (NP (SYM =))))))))
        (PRN (-LRB- -LRB-)
          (NP (CD o1))
          (, ,)
          (NP (CD o2) (, ,))
          (, ...)
          (NP (CD ot))
          (-RRB- -RRB-)))
      (CC and)
      (VP (VBZ returns)
        (NP
          (NP (DT the)
            (ADJP (RBS most) (JJ probable))
            (NN state))
          (, /)
          (NP
            (NML (NN tag) (NN sequence))
            (NN q) (SYM =)
            (PRN (-LRB- -LRB-)
              (NP (CD q1) (, ,) (CD q2) (, ,) (CD qt))
              (-RRB- -RRB-))))
        (ADVP (RB together))
        (PP (IN with)
          (NP (PRP$ its) (NN probability)))))
    (. .) ('' ")))

det(version-4, the-1)
advmod(version-4, slightly-2)
amod(version-4, simplified-3)
nsubj(takes-11, version-4)
nsubj(returns-34, version-4)
case(algorithm-8, of-5)
det(algorithm-8, the-6)
compound(algorithm-8, viterbi-7)
nmod:of(version-4, algorithm-8)
nsubj(present-10, we-9)
acl:relcl(algorithm-8, present-10)
root(ROOT-0, takes-11)
case(input-13, as-12)
obl:as(takes-11, input-13)
det(hmm-16, a-14)
amod(hmm-16, single-15)
dep(input-13, hmm-16)
cc(sequence-19, and-17)
det(sequence-19, a-18)
obl:as(takes-11, sequence-19)
conj:and(input-13, sequence-19)
case(words-22, of-20)
amod(words-22, observed-21)
nmod:of(sequence-19, words-22)
case(=-24, o-23)
nmod:o(words-22, =-24)
dep(takes-11, o1-26)
dep(o1-26, o2-28)
dep(o1-26, ot-31)
cc(returns-34, and-33)
conj:and(takes-11, returns-34)
det(state-38, the-35)
advmod(probable-37, most-36)
amod(state-38, probable-37)
obj(returns-34, state-38)
compound(sequence-41, tag-40)
compound(q-42, sequence-41)
appos(state-38, q-42)
dep(q-42, =-43)
nummod(qt-49, q1-45)
nummod(qt-49, q2-47)
appos(q-42, qt-49)
advmod(returns-34, together-51)
case(probability-54, with-52)
nmod:poss(probability-54, its-53)
obl:with(returns-34, probability-54)

(ROOT
  (S
    (NP
      (NP (DT the) (NNS veterans))
      (SBAR
        (WHNP (WP who))
        (S
          (NP (PRP i))
          (VP (VBD thought)
            (SBAR
              (S
                (NP (PRP we))
                (VP (MD would)
                  (VP (VB meet)
                    (PP (IN at)
                      (NP (DT the) (NN reunion)))))))))))
    (VP (VBD were)
      (ADJP (JJ dead)))
    (. .)))

det(veterans-2, the-1)
obj(thought-5, veterans-2)
nsubj(dead-13, veterans-2)
ref(veterans-2, who-3)
nsubj(thought-5, i-4)
acl:relcl(veterans-2, thought-5)
nsubj(meet-8, we-6)
aux(meet-8, would-7)
ccomp(thought-5, meet-8)
case(reunion-11, at-9)
det(reunion-11, the-10)
obl:at(meet-8, reunion-11)
cop(dead-13, were-12)
root(ROOT-0, dead-13)

(ROOT
  (S
    (NP
      (NP (DT the) (NNS veterans))
      (SBAR
        (WHNP (WP who))
        (S
          (NP (PRP i))
          (VP (VBD thought)
            (SBAR
              (S
                (VP (MD would)
                  (VP (VB be)
                    (PP (IN at)
                      (NP (DT the) (NN reunion)))))))))))
    (VP (VBD were)
      (ADJP (JJ dead)))
    (. .)))

det(veterans-2, the-1)
obj(thought-5, veterans-2)
nsubj(dead-12, veterans-2)
ref(veterans-2, who-3)
nsubj(thought-5, i-4)
acl:relcl(veterans-2, thought-5)
aux(reunion-10, would-6)
cop(reunion-10, be-7)
case(reunion-10, at-8)
det(reunion-10, the-9)
ccomp(thought-5, reunion-10)
cop(dead-12, were-11)
root(ROOT-0, dead-12)

